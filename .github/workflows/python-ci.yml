name: Python package

on: [push]

jobs:
  linux-ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10.8"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.7.1
      - name: Cache Poetry
        uses: actions/cache@v2
        with:
          path: |
            ~/.local
            ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Create virtual environment with poetry
        run:
          poetry install
      - name: Lint with flake8
        run: |
         # stop the build if there are Python syntax errors or undefined names
         poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
         poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
         poetry run pytest -n auto --dist=loadfile --durations=10
  windows-ci:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ "3.10.8" ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.7.1
      - name: Cache Poetry
        uses: actions/cache@v2
        with:
          path: |
            ~/.local
            ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Create virtual environment with poetry
        run:
          poetry install
      - name: Test with pytest
        run: |
          poetry run pytest -n auto --dist=loadfile --durations=10
  macos-ci:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [ "3.10.8" ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.7.1
      - name: Cache Poetry
        uses: actions/cache@v2
        with:
          path: |
            ~/.local
            ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Create virtual environment with poetry
        run:
          poetry install
      - name: Test with pytest
        run: |
          poetry run pytest -n auto --dist=loadfile --durations=10